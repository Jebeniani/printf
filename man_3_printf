man_3_printf               Linux Programmer's Manual              man_3_printf

            {This Project Made By Aymen Jebeniani & Med Ahmed Zghal}

NAME :         
      _printf()

SYNOPSIS :
       To use this function the #include "main.h" header is required.
       int _printf(const char *format, ...);

DESCRIPTION :        
       The functions in the _printf() family produce output according to
       a format as described below.  The functions _printf()
       write output to stdout, the standard output stream;

Conversion specifiers : 

       A character that specifies the type of conversion to be applied.
       The conversion specifiers and their meanings are:

       %d, %i   The int argument is converted to signed decimal notation.
              The precision, if any, gives the minimum number of digits
              that must appear; if the converted value requires fewer
              digits, it is padded on the left with zeros.  The default
              precision is 1.  When 0 is printed with an explicit
              precision 0, the output is empty.

        %c
              If no l modifier is present, the int argument is converted
              to an unsigned char, and the resulting character is
              written.  If an l modifier is present, the wint_t (wide
              character) argument is converted to a multibyte sequence
              by a call to the wcrtomb(3) function, with a conversion
              state starting in the initial state, and the resulting
              multibyte string is written.

       %s      If no l modifier is present: the const char * argument is
              expected to be a pointer to an array of character type
              (pointer to a string).  Characters from the array are
              written up to (but not including) a terminating null byte
              ('\0'); if a precision is specified, no more than the
              number specified are written.  If a precision is given, no
              null byte need be present; if the precision is not
              specified, or is greater than the size of the array, the
              array must contain a terminating null byte.

              If an l modifier is present: the const wchar_t * argument
              is expected to be a pointer to an array of wide
              characters.  Wide characters from the array are converted
              to multibyte characters (each by a call to the wcrtomb(3)
              function, with a conversion state starting in the initial
              state before the first wide character), up to and
              including a terminating null wide character.  The
              resulting multibyte characters are written up to (but not
              including) the terminating null byte.  If a precision is
              specified, no more bytes than the number specified are
              written, but no partial multibyte characters are written.
              Note that the precision determines the number of bytes
              written, not the number of wide characters or screen
              positions.  The array must contain a terminating null wide
              character, unless a precision is given and it is so small
              that the number of bytes written exceeds it before the end
              of the array is reached.

              
       %      A '%' is written.  No argument is converted.  The complete
              conversion specification is '%%'.

RETURN VALUE :
       Upon successful return, these functions return the number of
       characters printed (excluding the null byte used to end output to
       strings).
